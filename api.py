from fastapi import FastAPI, UploadFile, File, HTTPException, BackgroundTasks
from fastapi.responses import FileResponse, JSONResponse
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel, Field
from typing import Optional, Dict, Any, List
import tempfile
import shutil
import logging
from pathlib import Path
import json
import os
from datetime import datetime
from logger_config import api_logger as logger

# –ò–º–ø–æ—Ä—Ç—ã –Ω–∞—à–∏—Ö –º–æ–¥—É–ª–µ–π
from requirements_stub import analyze_requirements_stub
from vkr_formatter import format_vkr_document
from document_validator import validate_vkr_document

# Pydantic –º–æ–¥–µ–ª–∏ –¥–ª—è Swagger –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
class ServiceInfo(BaseModel):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ"""
    service: str = Field(..., description="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞")
    version: str = Field(..., description="–í–µ—Ä—Å–∏—è API")
    description: str = Field(..., description="–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞")
    documentation: str = Field(..., description="–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é")
    features: List[str] = Field(..., description="–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")

class ValidationSummary(BaseModel):
    """–ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    total_issues: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–±–ª–µ–º")
    errors: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫")
    warnings: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π")
    info: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
    score: int = Field(..., description="–û—Ü–µ–Ω–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è (0-100)")

class ValidationIssueModel(BaseModel):
    """–ú–æ–¥–µ–ª—å –ø—Ä–æ–±–ª–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏"""
    type: str = Field(..., description="–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã: error, warning, info")
    category: str = Field(..., description="–ö–∞—Ç–µ–≥–æ—Ä–∏—è: margins, fonts, headings, etc.")
    description: str = Field(..., description="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")
    location: str = Field(..., description="–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ (–Ω–æ–º–µ—Ä –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ + –ø—Ä–µ–≤—å—é)")
    expected: str = Field(..., description="–û–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    actual: str = Field(..., description="–§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ")
    suggestion: str = Field(default="", description="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é")

class ValidationStatistics(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    total_paragraphs: int = Field(..., description="–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤")
    total_tables: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–∞–±–ª–∏—Ü")
    total_sections: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—Ü–∏–π")
    heading_counts: Dict[str, int] = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—è–º")
    list_items: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–æ–≤")
    regular_paragraphs: int = Field(..., description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—ã—á–Ω—ã—Ö –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤")
    empty_paragraphs: int = Field(default=0, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—É—Å—Ç—ã—Ö –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤")

class ValidationResponse(BaseModel):
    """–û—Ç–≤–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    validation_passed: bool = Field(..., description="–ü—Ä–æ—à–ª–∞ –ª–∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ")
    summary: ValidationSummary = Field(..., description="–ö—Ä–∞—Ç–∫–∞—è —Å–≤–æ–¥–∫–∞")
    statistics: ValidationStatistics = Field(..., description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
    issues_by_category: Dict[str, List[ValidationIssueModel]] = Field(..., description="–ü—Ä–æ–±–ª–µ–º—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
    timestamp: str = Field(..., description="–í—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏")

class FormatResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞"""
    success: bool = Field(..., description="–£—Å–ø–µ—à–Ω–æ—Å—Ç—å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    message: str = Field(..., description="–°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ")
    filename: str = Field(..., description="–ò–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞")
    stats: Dict[str, Any] = Field(default={}, description="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    timestamp: str = Field(..., description="–í—Ä–µ–º—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

class ServiceStats(BaseModel):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞"""
    total_processed: int = Field(..., description="–í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
    successful: int = Field(..., description="–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
    failed: int = Field(..., description="–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏")
    validation_requests: int = Field(default=0, description="–ó–∞–ø—Ä–æ—Å–æ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    format_requests: int = Field(default=0, description="–ó–∞–ø—Ä–æ—Å–æ–≤ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    last_processed: Optional[str] = Field(None, description="–í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    uptime_start: str = Field(..., description="–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞")

class RequirementsResponse(BaseModel):
    """–û—Ç–≤–µ—Ç —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ –ì–û–°–¢"""
    status: str = Field(..., description="–°—Ç–∞—Ç—É—Å –∑–∞–ø—Ä–æ—Å–∞")
    message: str = Field(..., description="–û–ø–∏—Å–∞–Ω–∏–µ")
    version: str = Field(..., description="–í–µ—Ä—Å–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ì–û–°–¢")
    categories: List[str] = Field(..., description="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")
    requirements_preview: Dict[str, Any] = Field(..., description="–ü—Ä–µ–≤—å—é –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π")

class ErrorResponse(BaseModel):
    """–ú–æ–¥–µ–ª—å –æ—à–∏–±–∫–∏"""
    detail: str = Field(..., description="–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏")
    error_code: Optional[str] = Field(None, description="–ö–æ–¥ –æ—à–∏–±–∫–∏")
    timestamp: str = Field(..., description="–í—Ä–µ–º—è –æ—à–∏–±–∫–∏")

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
app = FastAPI(
    title="üéì VKR Formatter API",
    description="""
    ## üìã –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –í–ö–†
    
    **–í–µ—Ä—Å–∏—è 2.0** —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏ –æ–± –æ—à–∏–±–∫–∞—Ö!
    
    ### üéØ –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    
    - **üîç –í–∞–ª–∏–¥–∞—Ü–∏—è**: –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ì–û–°–¢ —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    - **‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
    - **üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞**: –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    - **üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è**: –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–±–ª–µ–º –ø–æ —Ç–∏–ø–∞–º (–ø–æ–ª—è, —à—Ä–∏—Ñ—Ç—ã, –∑–∞–≥–æ–ª–æ–≤–∫–∏, etc.)
    
    ### üìñ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:
    
    - –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π (H1-H4)
    - –ü–æ–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã  
    - –®—Ä–∏—Ñ—Ç—ã –∏ —Ä–∞–∑–º–µ—Ä—ã
    - –û—Ç—Å—Ç—É–ø—ã –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ
    - –¢–∞–±–ª–∏—Ü—ã –∏ —Å–ø–∏—Å–∫–∏
    - –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    
    ### üéñÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏:
    
    - **90-100**: ‚úÖ –û—Ç–ª–∏—á–Ω–æ (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ì–û–°–¢)
    - **70-89**: üü° –•–æ—Ä–æ—à–æ (–º–µ–ª–∫–∏–µ –∑–∞–º–µ—á–∞–Ω–∏—è)
    - **50-69**: ‚ö†Ô∏è –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ (—Ç—Ä–µ–±—É—é—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
    - **<50**: ‚ùå –ù–µ—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ (–º–Ω–æ–≥–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π)
    
    ---
    
    **üí° –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–π workflow:**
    1. –°–Ω–∞—á–∞–ª–∞ –≤–∞–ª–∏–¥–∏—Ä—É–π—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç (`/validate`)
    2. –ò–∑—É—á–∏—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å –æ—à–∏–±–∫–∞–º–∏
    3. –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–π—Ç–µ (`/format`)
    4. –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    
    **üîß –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢:** –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç "–∏–∑ –∫–æ—Ä–æ–±–∫–∏" –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤!
    """,
    version="2.0.0",
    contact={
        "name": "VKR Formatter Support",
        "email": "support@vkr-formatter.dev",
    },
    license_info={
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT",
    },
    tags_metadata=[
        {
            "name": "validation",
            "description": "üîç –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –í–ö–† —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏ –æ–± –æ—à–∏–±–∫–∞—Ö",
        },
        {
            "name": "formatting", 
            "description": "‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ –ì–û–°–¢",
        },
        {
            "name": "requirements",
            "description": "üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ì–û–°–¢",
        },
        {
            "name": "service",
            "description": "‚öôÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        },
    ],
    openapi_tags=[
        {
            "name": "validation",
            "description": "–î–µ—Ç–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏",
        },
        {
            "name": "formatting",
            "description": "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è",
        },
        {
            "name": "requirements", 
            "description": "–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢",
        },
        {
            "name": "service",
            "description": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ",
        },
    ]
)

# –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É CORS
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
    allow_credentials=True,
    allow_methods=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ HTTP –º–µ—Ç–æ–¥—ã
    allow_headers=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)

# –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
stats = {
    "total_processed": 0,
    "successful": 0,
    "failed": 0,
    "validation_requests": 0,
    "format_requests": 0,
    "last_processed": None,
    "uptime_start": datetime.now().isoformat()
}

def cleanup_temp_file(file_path: str):
    """–£–¥–∞–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª"""
    try:
        if os.path.exists(file_path):
            os.unlink(file_path)
            logger.info(f"–í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω: {file_path}")
    except Exception as e:
        logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª {file_path}: {e}")

@app.get("/", 
         response_model=ServiceInfo,
         tags=["service"],
         summary="üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ",
         description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ VKR Formatter API —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π")
async def root() -> ServiceInfo:
    """
    ## üìã –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
    - –ù–∞–∑–≤–∞–Ω–∏–µ –∏ –≤–µ—Ä—Å–∏—é API
    - –û–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π  
    - –°–ø–∏—Å–æ–∫ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    - –°—Å—ã–ª–∫–∏ –Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é
    """
    return ServiceInfo(
        service="VKR Formatter API",
        version="2.0.0",
        description="–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –í–ö–† –ø–æ –ì–û–°–¢ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏",
        documentation="/docs",
        features=[
            "üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏",
            "‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
            "üìä –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ (0-100 –±–∞–ª–ª–æ–≤)",
            "üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è –ø—Ä–æ–±–ª–µ–º –ø–æ —Ç–∏–ø–∞–º",
            "üìã –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢",
            "üéØ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é",
            "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"
        ]
    )

@app.get("/requirements", 
         response_model=RequirementsResponse,
         tags=["requirements"],
         summary="üìã –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢",
         description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–µ–≤—å—é –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ì–û–°–¢, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
async def get_default_requirements() -> RequirementsResponse:
    """
    ## üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ì–û–°–¢
    
    –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢ –¥–ª—è –í–ö–†, –∫–æ—Ç–æ—Ä—ã–µ –≤–∫–ª—é—á–∞—é—Ç:
    
    - **–ë–∞–∑–æ–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ**: —à—Ä–∏—Ñ—Ç—ã, –ø–æ–ª—è, –æ—Ç—Å—Ç—É–ø—ã
    - **–ó–∞–≥–æ–ª–æ–≤–∫–∏**: H1-H4 —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º  
    - **–°–ø–∏—Å–∫–∏**: –æ—Ç—Å—Ç—É–ø—ã, –º–∞—Ä–∫–µ—Ä—ã, –ø—É–Ω–∫—Ç—É–∞—Ü–∏—è
    - **–¢–∞–±–ª–∏—Ü—ã**: –ø–æ–¥–ø–∏—Å–∏, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ, –∑–∞–≥–æ–ª–æ–≤–∫–∏
    - **–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã**: –≤–≤–µ–¥–µ–Ω–∏–µ, –∑–∞–∫–ª—é—á–µ–Ω–∏–µ, —Å–ø–∏—Å–æ–∫ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã
    
    **üí° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ**: –ù–µ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å —Ñ–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π - –≤—Å–µ —É–∂–µ –≤—Å—Ç—Ä–æ–µ–Ω–æ!
    """
    try:
        requirements = analyze_requirements_stub("dummy_path")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–µ–≤—å—é –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
        preview = {
            "–±–∞–∑–æ–≤–æ–µ_—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ": {
                "—à—Ä–∏—Ñ—Ç": requirements["base_formatting"]["font_name"],
                "—Ä–∞–∑–º–µ—Ä": f"{requirements['base_formatting']['font_size']} –ø—Ç",
                "–º–µ–∂—Å—Ç—Ä–æ—á–Ω—ã–π_–∏–Ω—Ç–µ—Ä–≤–∞–ª": requirements["base_formatting"]["line_spacing"],
                "–ø–æ–ª—è_—Å–º": requirements["base_formatting"]["margins_cm"]
            },
            "–∑–∞–≥–æ–ª–æ–≤–∫–∏": {
                "H1": f"{requirements['h1_formatting']['font_size']} –ø—Ç, –∂–∏—Ä–Ω—ã–π, –ø–æ —Ü–µ–Ω—Ç—Ä—É",
                "H2": f"{requirements['h2_formatting']['font_size']} –ø—Ç, –∂–∏—Ä–Ω—ã–π, —Å–ª–µ–≤–∞",
                "H3": f"{requirements['h3_formatting']['font_size']} –ø—Ç, –æ–±—ã—á–Ω—ã–π, —Å–ª–µ–≤–∞"
            },
            "—Å–ø–∏—Å–∫–∏": {
                "–æ—Ç—Å—Ç—É–ø": f"{requirements['lists']['bullet_lists']['indent_cm']} —Å–º",
                "–º–∞—Ä–∫–µ—Ä": requirements['lists']['bullet_lists']['marker']
            }
        }
        
        return RequirementsResponse(
            status="success",
            message="–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢ –¥–ª—è –í–ö–†",
            version="–ì–û–°–¢ 7.32-2017",
            categories=list(requirements.keys()),
            requirements_preview=preview
        )
    except Exception as e:
        raise HTTPException(
            status_code=500, 
            detail=f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π: {str(e)}"
        )

@app.get("/stats", 
         response_model=ServiceStats,
         tags=["service"],
         summary="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Ä–≤–∏—Å–∞",
         description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API")
async def get_stats() -> ServiceStats:
    """
    ## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç:
    - –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    - –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω—ã—Ö –∏ –Ω–µ—É–¥–∞—á–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    - –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–∏—Å–∞
    """
    return ServiceStats(**stats)

@app.post("/format",
         response_class=FileResponse,
         tags=["formatting"],
         summary="‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –í–ö–†",
         description="–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –í–ö–† –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –ì–û–°–¢ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª",
         responses={
             200: {
                 "description": "–£—Å–ø–µ—à–Ω–æ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç",
                 "content": {"application/vnd.openxmlformats-officedocument.wordprocessingml.document": {}},
                 "headers": {
                     "X-Format-Stats": {"description": "JSON —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"},
                     "X-Requirements-Source": {"description": "–ò—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π: file –∏–ª–∏ default"},
                     "X-Version": {"description": "–í–µ—Ä—Å–∏—è API"}
                 }
             },
             400: {"model": ErrorResponse, "description": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞"},
             500: {"model": ErrorResponse, "description": "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"}
         })
async def format_vkr(
    background_tasks: BackgroundTasks,
    vkr: UploadFile = File(..., description="üìÑ –§–∞–π–ª –í–ö–† –≤ —Ñ–æ—Ä–º–∞—Ç–µ .docx –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"),
    requirements: Optional[UploadFile] = File(
        default=None, description="üìã –§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ì–û–°–¢)")
):
    """
    ## ‚ú® –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –í–ö–†
    
    **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç endpoint:**
    - –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –ø–æ –ì–û–°–¢
    - –ü—Ä–∏–º–µ–Ω—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —à—Ä–∏—Ñ—Ç—ã, –æ—Ç—Å—Ç—É–ø—ã, –ø–æ–ª—è
    - –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π (H1-H4)
    - –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–∫–∏ –∏ —Ç–∞–±–ª–∏—Ü—ã
    - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–æ—Ç–æ–≤—ã–π –∫ –ø–µ—á–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç
    
    **–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:**
    - üìã **–ó–∞–≥–æ–ª–æ–≤–∫–∏**: H1 (16–ø—Ç, –∂–∏—Ä–Ω—ã–π, –ø–æ —Ü–µ–Ω—Ç—Ä—É), H2-H4 (14–ø—Ç, —Ä–∞–∑–ª–∏—á–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ)
    - üìù **–ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã**: –∫—Ä–∞—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ 1.25—Å–º, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —à–∏—Ä–∏–Ω–µ
    - üìä **–ü–æ–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞**: –≤–µ—Ä—Ö/–Ω–∏–∑ 2—Å–º, –ª–µ–≤–æ 3—Å–º, –ø—Ä–∞–≤–æ 1.5—Å–º  
    - üî§ **–®—Ä–∏—Ñ—Ç—ã**: Times New Roman, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
    - üìå **–°–ø–∏—Å–∫–∏**: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Ç—Å—Ç—É–ø—ã –∏ –º–∞—Ä–∫–µ—Ä—ã
    - üìÑ **–ò–Ω—Ç–µ—Ä–≤–∞–ª—ã**: 1.5 –º–µ–∂–¥—É —Å—Ç—Ä–æ–∫–∞–º–∏, –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    
    **–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
    - üéØ **–£–º–Ω–æ–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ**: –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    - üö´ **–ü—Ä–æ–ø—É—Å–∫ —Å–ª—É–∂–µ–±–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü**: —Ç–∏—Ç—É–ª—å–Ω—ã–π –ª–∏—Å—Ç, –∑–∞–¥–∞–Ω–∏–µ, –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω—ã–π –ø–ª–∞–Ω
    - üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö**: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    
    **üí° –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
    - –î–æ–∫—É–º–µ–Ω—Ç –∏–º–µ–µ—Ç –º–Ω–æ–≥–æ –æ—à–∏–±–æ–∫ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–æ—Ü–µ–Ω–∫–∞ < 70)
    - –ù—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–≤–µ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç –∫ –ì–û–°–¢
    - –ò—Å—Ö–æ–¥–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏–ª—å–Ω–æ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    
    **‚ö†Ô∏è –í–∞–∂–Ω–æ:**
    - –°–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π —Ñ–∞–π–ª (–∏—Å—Ö–æ–¥–Ω—ã–π –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è)
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π
    - –°–ª–æ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ–≥—É—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å —Ä—É—á–Ω–æ–π –¥–æ—Ä–∞–±–æ—Ç–∫–∏
    """
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats["total_processed"] += 1
    stats["format_requests"] += 1
    stats["last_processed"] = datetime.now().isoformat()

    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞
    if not vkr.filename.endswith(('.docx', '.doc')):
        raise HTTPException(
            status_code=400,
            detail="–§–∞–π–ª –í–ö–† –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .docx –∏–ª–∏ .doc"
        )

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    with tempfile.TemporaryDirectory() as tmpdir:
        tmpdir_path = Path(tmpdir)

        # –ü—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
        vkr_path = tmpdir_path / "input_vkr.docx"
        output_path = tmpdir_path / "formatted_vkr.docx"

        try:
            logger.info(f"üìÅ –ù–∞—á–∏–Ω–∞–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –í–ö–†: {vkr.filename}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –í–ö–†
            with open(vkr_path, "wb") as f:
                shutil.copyfileobj(vkr.file, f)
            logger.info(f"üíæ –í–ö–† —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {vkr_path}")

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢
            logger.info("üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢")
            vkr_requirements = analyze_requirements_stub("default")

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
            logger.info("üöÄ –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
            success, format_stats = format_vkr_document(
                str(vkr_path),
                vkr_requirements,
                str(output_path)
            )

            logger.info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: success={success}")

            if not success:
                stats["failed"] += 1
                raise HTTPException(
                    status_code=500,
                    detail="–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞"
                )

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if not output_path.exists():
                stats["failed"] += 1
                raise HTTPException(
                    status_code=500,
                    detail="–û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω"
                )

            # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –º–µ—Å—Ç–æ
            final_temp_file = tempfile.NamedTemporaryFile(delete=False, suffix=".docx")
            shutil.copy2(output_path, final_temp_file.name)
            final_temp_file.close()

            stats["successful"] += 1

            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
            original_name = Path(vkr.filename).stem
            output_filename = f"{original_name}_formatted.docx"

            logger.info(f"üéâ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {output_filename}")

        except HTTPException:
            raise
        except Exception as e:
            stats["failed"] += 1
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {str(e)}")
            raise HTTPException(
                status_code=500,
                detail=f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {str(e)}"
            )

    # –ü–ª–∞–Ω–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    background_tasks.add_task(cleanup_temp_file, final_temp_file.name)

    return FileResponse(
        path=final_temp_file.name,
        filename=output_filename,
        media_type="application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        headers={
            "X-Format-Stats": json.dumps(format_stats),
            "X-Requirements-Source": "file" if requirements else "default",
            "X-Version": "2.0.0"
        }
    )

@app.post("/validate",
         response_model=ValidationResponse,
         tags=["validation"],
         summary="üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –í–ö–†",
         description="–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ì–û–°–¢ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç",
         responses={
             200: {"model": ValidationResponse, "description": "–î–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏"},
             400: {"model": ErrorResponse, "description": "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞"},
             500: {"model": ErrorResponse, "description": "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏"}
         })
async def validate_vkr(
    vkr: UploadFile = File(..., description="üìÑ –§–∞–π–ª –í–ö–† –≤ —Ñ–æ—Ä–º–∞—Ç–µ .docx –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏"),
    requirements: Optional[UploadFile] = File(
        default=None, description="üìã –§–∞–π–ª —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ - –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ì–û–°–¢)")
) -> ValidationResponse:
    """
    ## üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –í–ö–†
    
    **–ß—Ç–æ –¥–µ–ª–∞–µ—Ç —ç—Ç–æ—Ç endpoint:**
    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ì–û–°–¢ **–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô**
    - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç —Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –æ—à–∏–±–∫–∞–º–∏
    - –î–∞–µ—Ç –ø–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π –ø—Ä–æ–±–ª–µ–º—ã
    - –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –æ—Ü–µ–Ω–∫—É –∫–∞—á–µ—Å—Ç–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞ (0-100)
    
    **üéØ –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ—à–∏–±–æ–∫ –≤–∫–ª—é—á–∞–µ—Ç:**
    - üìç **–¢–æ—á–Ω–æ–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ**: –Ω–æ–º–µ—Ä –ø–∞—Ä–∞–≥—Ä–∞—Ñ–∞ + –ø—Ä–µ–≤—å—é —Ç–µ–∫—Å—Ç–∞ (50 —Å–∏–º–≤–æ–ª–æ–≤)
    - ‚ö†Ô∏è **–û–∂–∏–¥–∞–µ–º–æ–µ vs —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ**: –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å –µ–¥–∏–Ω–∏—Ü–∞–º–∏ –∏–∑–º–µ—Ä–µ–Ω–∏—è
    - üí° **–ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏**: –∫–æ–º–∞–Ω–¥—ã –º–µ–Ω—é Word –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    - üè∑Ô∏è **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∏–ª—è—Ö**: –∫–∞–∫–æ–π —Å—Ç–∏–ª—å –ø—Ä–∏–º–µ–Ω–µ–Ω –∫ —ç–ª–µ–º–µ–Ω—Ç—É
    - üìä **–ö–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏—è**: –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ç–∏–ø–∞–º –ø—Ä–æ–±–ª–µ–º
    
    **üè∑Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏:**
    - **margins**: –ø–æ–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞, –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è, —Ñ–æ—Ä–º–∞—Ç A4
    - **fonts**: —Ç–∏–ø—ã —à—Ä–∏—Ñ—Ç–æ–≤, —Ä–∞–∑–º–µ—Ä—ã –≤ —Ä–∞–∑–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
    - **headings**: –∑–∞–≥–æ–ª–æ–≤–∫–∏ H1-H4 (—à—Ä–∏—Ñ—Ç, —Ä–∞–∑–º–µ—Ä, –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ)
    - **paragraphs**: –∫—Ä–∞—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –º–µ–∂–¥—É—Å—Ç—Ä–æ—á–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    - **alignment**: –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ø–æ —à–∏—Ä–∏–Ω–µ/—Ü–µ–Ω—Ç—Ä—É/–∫—Ä–∞—è–º
    - **lists**: –æ—Ç—Å—Ç—É–ø—ã —Å–ø–∏—Å–∫–æ–≤, –≤–∏—Å—è—á–∏–µ –æ—Ç—Å—Ç—É–ø—ã
    - **tables**: —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü, –∑–∞–≥–æ–ª–æ–≤–∫–∏, –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å
    - **structure**: –∏–µ—Ä–∞—Ä—Ö–∏—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤, –æ–±—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞
    
    **üéñÔ∏è –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏:**
    - **üî¥ –û—à–∏–±–∫–∏ (–≤–µ—Å 3)**: –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ì–û–°–¢
    - **üü° –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è (–≤–µ—Å 2)**: –≤–∞–∂–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è
    - **üîµ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–≤–µ—Å 1)**: —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ –ø–æ–¥—Å–∫–∞–∑–∫–∏
    
    **üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞:**
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä–∞–≥—Ä–∞—Ñ–æ–≤, —Ç–∞–±–ª–∏—Ü, –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—è–º
    - –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –±–∞–ª–∞–Ω—Å–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    - –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ —Ç–∞–±–ª–∏—Ü
    - –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    
    **üí° –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**
    - –ü–µ—Ä–µ–¥ –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–π —Å–¥–∞—á–µ–π —Ä–∞–±–æ—Ç—ã
    - –î–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
    - –ï—Å–ª–∏ –Ω—É–∂–Ω—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    - –î–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–æ—Å–ª–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    
    **‚ö° –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:**
    - –î–æ–∫—É–º–µ–Ω—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–µ–∏–∑–º–µ–Ω–Ω—ã–º
    - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ—à–∏–±–æ–∫
    - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—É—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    - –ë—ã—Å—Ç—Ä–∞—è —Ä–∞–±–æ—Ç–∞
    """
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats["total_processed"] += 1
    stats["validation_requests"] += 1
    stats["last_processed"] = datetime.now().isoformat()

    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ —Ñ–∞–π–ª–∞
    if not vkr.filename.endswith(('.docx', '.doc')):
        raise HTTPException(
            status_code=400,
            detail="–§–∞–π–ª –í–ö–† –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ —Ñ–æ—Ä–º–∞—Ç–µ .docx –∏–ª–∏ .doc"
        )

    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    with tempfile.TemporaryDirectory() as tmpdir:
        tmpdir_path = Path(tmpdir)
        vkr_path = tmpdir_path / "input_vkr.docx"

        try:
            logger.info(f"üîç –ù–∞—á–∏–Ω–∞–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –í–ö–†: {vkr.filename}")

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –í–ö–†
            with open(vkr_path, "wb") as f:
                shutil.copyfileobj(vkr.file, f)

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢
            logger.info("üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ì–û–°–¢")
            vkr_requirements = analyze_requirements_stub("default")

            # –í—ã–ø–æ–ª–Ω—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é
            logger.info("üîç –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é...")
            validation_passed, report = validate_vkr_document(str(vkr_path), vkr_requirements)

            logger.info(f"üìä –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –û—Ü–µ–Ω–∫–∞: {report.get_summary()['score']}/100")

            # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º –¥–ª—è API
            issues_by_category = {}
            for issue in report.issues:
                if issue.category not in issues_by_category:
                    issues_by_category[issue.category] = []
                
                issues_by_category[issue.category].append(ValidationIssueModel(
                    type=issue.type,
                    category=issue.category,
                    description=issue.description,
                    location=issue.location,
                    expected=issue.expected,
                    actual=issue.actual,
                    suggestion=issue.suggestion
                ))

            # –°–æ–∑–¥–∞–µ–º –æ—Ç–≤–µ—Ç
            response = ValidationResponse(
                validation_passed=validation_passed,
                summary=ValidationSummary(**report.get_summary()),
                statistics=ValidationStatistics(**report.statistics),
                issues_by_category=issues_by_category,
                timestamp=datetime.now().isoformat()
            )

            stats["successful"] += 1
            return response

        except HTTPException:
            raise
        except Exception as e:
            stats["failed"] += 1
            logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(e)}")
            raise HTTPException(
                status_code=500,
                detail=f"–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {str(e)}"
            )

@app.get("/demo/validation",
         response_model=ValidationResponse,
         tags=["validation"],
         summary="üéØ –î–µ–º–æ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –æ—à–∏–±–æ–∫",
         description="–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–º–µ—Ä –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π API")
async def demo_validation() -> ValidationResponse:
    """
    ## üéØ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    
    –≠—Ç–æ—Ç endpoint –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∏–º–µ—Ä —Ç–æ–≥–æ, –∫–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç –¥–µ—Ç–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏.
    –ü–æ–ª–µ–∑–Ω–æ –¥–ª—è:
    - –ü–æ–Ω–∏–º–∞–Ω–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞ `/validate`
    - –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    - –ò–∑—É—á–µ–Ω–∏—è —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
    
    **–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –ø—Ä–∏–º–µ—Ä —Å:**
    - –û—à–∏–±–∫–∞–º–∏ —à—Ä–∏—Ñ—Ç–æ–≤ –∏ —Ä–∞–∑–º–µ—Ä–æ–≤
    - –ü—Ä–æ–±–ª–µ–º–∞–º–∏ –ø–æ–ª–µ–π –∏ –æ—Ç—Å—Ç—É–ø–æ–≤
    - –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º
    - –ü—Ä–æ–±–ª–µ–º–∞–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö
    - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
    """
    from demo_detailed_errors import create_demo_report
    
    report = create_demo_report()
    
    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    issues_by_category = {}
    for issue in report.issues:
        if issue.category not in issues_by_category:
            issues_by_category[issue.category] = []
        
        issues_by_category[issue.category].append(ValidationIssueModel(
            type=issue.type,
            category=issue.category,
            description=issue.description,
            location=issue.location,
            expected=issue.expected,
            actual=issue.actual,
            suggestion=issue.suggestion
        ))
    
    return ValidationResponse(
        validation_passed=False,
        summary=ValidationSummary(**report.get_summary()),
        statistics=ValidationStatistics(**report.statistics),
        issues_by_category=issues_by_category,
        timestamp=datetime.now().isoformat()
    )

@app.exception_handler(HTTPException)
async def http_exception_handler(request, exc: HTTPException):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ HTTP –æ—à–∏–±–æ–∫ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π"""
    return JSONResponse(
        status_code=exc.status_code,
        content={
            "detail": exc.detail,
            "status_code": exc.status_code,
            "timestamp": datetime.now().isoformat(),
            "path": str(request.url),
            "method": request.method
        }
    )

@app.exception_handler(Exception)
async def global_exception_handler(request, exc):
    """–ì–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏"""
    logger.error(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(exc)}")
    
    return JSONResponse(
        status_code=500,
        content={
            "detail": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
            "error_type": type(exc).__name__,
            "timestamp": datetime.now().isoformat(),
            "path": str(request.url)
        }
    )

if __name__ == "__main__":
    import uvicorn
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ VKR Formatter API —Å Swagger UI")
    logger.info("üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8000/docs")
    logger.info("üîß –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/redoc")
    
    uvicorn.run(
        "api:app",
        host="0.0.0.0",
        port=8000,
        reload=True,
        log_level="info"
    )
