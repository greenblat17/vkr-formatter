import logging
from typing import Dict
import colorlog

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è


def setup_colored_logging():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ü–≤–µ—Ç–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    color_formatter = colorlog.ColoredFormatter(
        '%(log_color)s%(asctime)s - %(levelname)-8s%(reset)s %(message)s',
        datefmt='%H:%M:%S',
        log_colors={
            'DEBUG': 'cyan', 'INFO': 'green', 'WARNING': 'yellow',
            'ERROR': 'red', 'CRITICAL': 'red,bg_white',
        },
        style='%'
    )

    handler = colorlog.StreamHandler()
    handler.setFormatter(color_formatter)

    logger = colorlog.getLogger(__name__)
    logger.setLevel(logging.INFO)
    logger.handlers.clear()
    logger.addHandler(handler)

    return logger


logger = setup_colored_logging()


class DocumentState:
    """–£–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞"""

    def __init__(self):
        self.in_title_section = True
        self.in_contents_section = False
        self.in_references_section = False
        self.found_main_content = False
        self.pages_skipped = 0

    def start_contents_section(self):
        """–ù–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–∑–¥–µ–ª —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è"""
        self.in_contents_section = True
        logger.info("üìë –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è")

    def start_main_content(self):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ"""
        self.in_title_section = False
        self.in_contents_section = False
        self.in_references_section = False
        self.found_main_content = True
        logger.info("üü¢ –ü–µ—Ä–µ—Ö–æ–¥ –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—é")

    def start_references_section(self):
        """–ù–∞—á–∏–Ω–∞–µ—Ç —Ä–∞–∑–¥–µ–ª —Å–ø–∏—Å–∫–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã"""
        self.in_references_section = True
        logger.info("üìö –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–µ–∂–∏–º —Å–ø–∏—Å–∫–∞ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—ã")

    def is_in_service_section(self) -> bool:
        """–ù–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –≤ —Å–ª—É–∂–µ–±–Ω–æ–π —Å–µ–∫—Ü–∏–∏"""
        return self.in_title_section or self.in_contents_section

    def get_state_info(self) -> Dict[str, bool]:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏"""
        return {
            'in_title_section': self.in_title_section,
            'in_contents_section': self.in_contents_section,
            'in_references_section': self.in_references_section,
            'found_main_content': self.found_main_content
        }
